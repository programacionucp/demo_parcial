#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    May 27, 2020 04:30:05 PM -03  platform: Windows NT
#    May 27, 2020 06:35:30 PM -03  platform: Windows NT
#    May 27, 2020 07:03:01 PM -03  platform: Windows NT

import sys
import json
import tkinter.messagebox

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

with open("covid19.json") as archivo:
    datos = json.load(archivo)

def set_Tk_var():
    global spindias
    spindias = tk.StringVar()
    global listapais
    listapais = tk.StringVar()
    global combobox
    combobox = tk.StringVar()
    global spinbox
    spinbox = tk.StringVar()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top
########## CUADROS ###########

    for cuadro in datos:
        arg="Argentina"
        par="Paraguay"
        uru="Uruguay"
        bra="Brazil"

        datargconf=int(cuadro['confirmados'])
        if arg == cuadro['pais']:
            w.Label6.configure(text=int(cuadro['confirmados']))
            w.Label7.configure(text=int(cuadro['muertos']))
            w.Label8.configure(text=int(cuadro['recuperados']))
        if par == cuadro['pais']:
            w.Label6_6.configure(text=int(cuadro['confirmados']))
            w.Label7_7.configure(text=int(cuadro['muertos']))
            w.Label8_8.configure(text=int(cuadro['recuperados']))
        if uru == cuadro['pais']:
            w.Label6_14.configure(text=int(cuadro['confirmados']))
            w.Label7_15.configure(text=int(cuadro['muertos']))
            w.Label8_16.configure(text=int(cuadro['recuperados']))
        if bra == cuadro['pais']:
            w.Label6_22.configure(text=int(cuadro['confirmados']))
            w.Label7_23.configure(text=int(cuadro['muertos']))
            w.Label8_24.configure(text=int(cuadro['recuperados']))

def buscador():
    for buscador in datos:
        if listapais.get()==buscador['pais'] and spindias.get() == buscador['dia']:
            w.Label19.configure(text=int(buscador['confirmados']))
            w.Label20.configure(text=int(buscador['muertos']))
            w.Label21.configure(text=int(buscador['recuperados']))
            print(listapais.get())
        sys.stdout.flush()

def paisrecuperados():
    mayorconf=0
    for recu in datos:
        if int(recu['confirmados'])>= mayorconf:
            mayorconf=int(recu['confirmados'])
            w.Label13.configure(text=mayorconf)
            w.Label11.configure(text=recu['pais'])

    print('interfazparcial_support.paisrecuperados')
    sys.stdout.flush()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import interfazparcial
    interfazparcial.vp_start_gui()





