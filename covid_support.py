#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    May 27, 2020 03:55:32 PM -03  platform: Windows NT

import sys
import json
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

with open('covid19.json', encoding = 'utf-8') as file:
    paises = json.load(file)


def set_Tk_var():


    global argConf
    argConf = tk.IntVar()
    global argFall
    argFall = tk.IntVar()
    global argRec
    argRec = tk.IntVar()
    global paisConfirNom
    paisConfirNom = tk.StringVar()
    global paisConfirCant
    paisConfirCant = tk.StringVar()
    global paisBusc
    paisBusc = tk.StringVar()
    global paisDiaBusc
    paisDiaBusc = tk.StringVar()
    global buscConf
    buscConf = tk.IntVar()
    global buscFall
    buscFall = tk.IntVar()
    global busRec
    busRec = tk.IntVar()
    global parConf
    parConf = tk.IntVar()
    global parFall
    parFall = tk.IntVar()
    global parRec
    parRec = tk.IntVar()
    global uruConf
    uruConf = tk.IntVar()
    global uruFall
    uruFall = tk.IntVar()
    global uruRec
    uruRec = tk.IntVar()
    global braConf
    braConf = tk.IntVar()
    global braFall
    braFall = tk.IntVar()
    global braRec
    braRec = tk.IntVar()

    for pais in paises:
        if pais["pais"] == "Brazil":
            if int(pais["confirmados"]) >= braConf.get():
                braConf.set(pais["confirmados"])
            if int(pais["muertos"]) >= braFall.get():
                braFall.set(pais["muertos"])
            if int(pais["recuperados"]) >= braRec.get():
                braRec.set(pais["recuperados"])
        if pais["pais"] == "Argentina":
            if int(pais["confirmados"]) >= argConf.get():
                argConf.set(pais["confirmados"])
            if int(pais["muertos"]) >= argFall.get():
                argFall.set(pais["muertos"])
            if int(pais["recuperados"]) >= argRec.get():
                argRec.set(pais["recuperados"])
        if pais["pais"] == "Uruguay":
            if int(pais["confirmados"]) >= uruConf.get():
                uruConf.set(pais["confirmados"])
            if int(pais["muertos"]) >= uruFall.get():
                uruFall.set(pais["muertos"])
            if int(pais["recuperados"]) >= uruRec.get():
                uruRec.set(pais["recuperados"])
        if pais["pais"] == "Paraguay":
            if int(pais["confirmados"]) >= parConf.get():
                parConf.set(pais["confirmados"])
            if int(pais["muertos"]) >= parFall.get():
                parFall.set(pais["muertos"])
            if int(pais["recuperados"]) >= parRec.get():
                parRec.set(pais["recuperados"])

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def buscarConfirmados():
    mayor=0
    for pais in paises:
        if int(pais["confirmados"]) >= mayor:
            mayor=int(pais["confirmados"])
            pais=pais["pais"]
            paisConfirNom.set(pais)
            paisConfirCant.set(mayor)


def buscarPais():
    nomPais=paisBusc.get()
    dia=paisDiaBusc.get()
    for pais in paises:
        if pais["pais"] == nomPais:
            if pais["dia"] == dia:
                buscConf.set(pais["confirmados"])
                buscFall.set(pais["muertos"])
                busRec.set(pais["recuperados"])
def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import covid
    covid.vp_start_gui()




